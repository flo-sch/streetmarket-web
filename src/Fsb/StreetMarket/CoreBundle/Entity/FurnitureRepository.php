<?php

namespace Fsb\StreetMarket\CoreBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

/**
 * FurnitureRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FurnitureRepository extends EntityRepository
{
    public function findAll()
    {
        $qb = $this->_em->createQueryBuilder();

        $qb->select('f')
            ->from('FsbStreetMarketCoreBundle:Furniture', 'f')
            ->where($qb->expr()->isNull('f.removedAt'))
        ;

        return $qb->getQuery()->getResult();
    }

    public function findAllActive()
    {
        $qb = $this->_em->createQueryBuilder();

        $qb->select('f')
            ->from('FsbStreetMarketCoreBundle:Furniture', 'f')
            ->where($qb->expr()->isNull('f.removedAt'))
            ->andWhere($qb->expr()->eq('f.isHidden', ':isHidden'))
            ->setParameter('isHidden', false)
        ;

        return $qb->getQuery()->getResult();
    }

    public function findAllLatestActive($limit = null)
    {
        $qb = $this->_em->createQueryBuilder();

        $qb->select('f')
            ->from('FsbStreetMarketCoreBundle:Furniture', 'f')
            ->where($qb->expr()->isNull('f.removedAt'))
            ->andWhere($qb->expr()->eq('f.isHidden', ':isHidden'))
            ->setParameter('isHidden', false)
            ->orderBy('f.tookAt', 'DESC')
        ;

        if ($limit) {
            $qb->setMaxResults($limit);
        }

        return $qb->getQuery()->getResult();
    }

    public function findOne($id)
    {
        $furniture = null;

        $qb = $this->_em->createQueryBuilder();

        $qb->select('f')
            ->from('FsbStreetMarketCoreBundle:Furniture', 'f')
            ->where($qb->expr()->isNull('f.removedAt'))
            ->andWhere($qb->expr()->eq('f.id', ':id'))
            ->setParameter('id', $id)
        ;

        try {
            $furniture = $qb->getQuery()->getSingleResult();
        }
        catch (NoResultException $NRE) {}

        return $furniture;
    }

    public function findOneActive($id)
    {
        $furniture = null;

        $qb = $this->_em->createQueryBuilder();

        $qb->select('f')
            ->from('FsbStreetMarketCoreBundle:Furniture', 'f')
            ->where($qb->expr()->isNull('f.removedAt'))
            ->andWhere($qb->expr()->eq('f.isHidden', ':isHidden'))
            ->andWhere($qb->expr()->eq('f.id', ':id'))
            ->setParameter('isHidden', false)
            ->setParameter('id', $id)
        ;

        try {
            $furniture = $qb->getQuery()->getSingleResult();
        }
        catch (NoResultException $NRE) {}

        return $furniture;
    }
}
